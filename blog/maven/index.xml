<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>maven on Mikhail Potter</title>
    <link>https://mvpotter.github.io/mvpotter/blog/maven/</link>
    <description>Recent content in maven on Mikhail Potter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2020, Jane Doe.</copyright>
    <lastBuildDate>Sun, 12 Mar 2023 14:10:03 +0700</lastBuildDate><atom:link href="https://mvpotter.github.io/mvpotter/blog/maven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitLab CI for mono repo built by Maven</title>
      <link>https://mvpotter.github.io/mvpotter/gitlab-ci-for-mono-repo-built-by-maven/</link>
      <pubDate>Sun, 12 Mar 2023 14:10:03 +0700</pubDate>
      
      <guid>https://mvpotter.github.io/mvpotter/gitlab-ci-for-mono-repo-built-by-maven/</guid>
      <description>A couple of years ago we have decomposed one of our projects to a number of Microservices. For the sake of simplicity we continued to keep sources in a single repository. On every commit appropriate maven goal was launched for parent project and it delegated the task to its children. At the very beginning services were quite small and did not required much time to compile and execute tests. However, through the time more logic and tests were implemented.</description>
    </item>
    
    <item>
      <title>Spring boot debian package</title>
      <link>https://mvpotter.github.io/mvpotter/spring-boot-debian-package/</link>
      <pubDate>Sat, 03 Sep 2016 10:42:43 +0700</pubDate>
      
      <guid>https://mvpotter.github.io/mvpotter/spring-boot-debian-package/</guid>
      <description>&lt;p&gt;Recently got a task to create a debian package with Spring boot application to facilitate deployment process. The target OS is Ubuntu 14.04 and the application build system is Maven. Surfing the web, I found only one relative &lt;a href=&#34;https://www.ccampo.me/java/spring/linux/2016/02/15/boot-service-package.html&#34;&gt;article&lt;/a&gt; described how to achieve the goal, however it uses &lt;a href=&#34;https://github.com/nebula-plugins/gradle-ospackage-plugin&#34;&gt;Gradle ospackage plugin&lt;/a&gt;, which is not compatible with Maven builds. Thus, I started to find out the best way to create debian packages using Maven and how to apply the knowledge to make a package with Spring boot application. Complete source of the project could be found on &lt;a href=&#34;https://github.com/mvpotter/spring-boot-debian-package&#34;&gt;GiHub&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
