<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>architecture on Michael Potter</title>
    <link>https://mvpotter.github.io/mvpotter/tags/architecture/</link>
    <description>Recent content in architecture on Michael Potter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Mar 2019 16:04:11 +0700</lastBuildDate><atom:link href="https://mvpotter.github.io/mvpotter/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Beyond layered architecture</title>
      <link>https://mvpotter.github.io/mvpotter/post/2019/03/beyond-layered-architecture/</link>
      <pubDate>Sat, 30 Mar 2019 16:04:11 +0700</pubDate>
      
      <guid>https://mvpotter.github.io/mvpotter/post/2019/03/beyond-layered-architecture/</guid>
      <description>I have taken part in development of tens enterprise project during my career. Usually, the main approach of building them is quite similar: layered architecture with Spring framework and JPA. It is quite easy to understand the layered architecture principles and get a vision how to separate layers vertically. However, developers usually have issues when they need to make a decision concerning horizontal separation of concerns and how exactly business logic should be separated.</description>
    </item>
    
  </channel>
</rss>
